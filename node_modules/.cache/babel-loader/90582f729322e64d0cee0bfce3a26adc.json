{"ast":null,"code":"// import { useState } from \"react\";\n// import { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\n// import { storage } from \"./fire\";\n// function App() {\n//   const [progress, setProgress] = useState(0);\n//   const formHandler = (e) => {\n//     e.preventDefault();\n//     const file = e.target[0].files[0];\n//     uploadFiles(file);\n//   };\n//   const uploadFiles = (file) => {\n//     //\n//     if (!file) return;\n//     const sotrageRef = ref(storage, `files/${file.name}`);\n//     const uploadTask = uploadBytesResumable(sotrageRef, file);\n//     uploadTask.on(\n//       \"state_changed\",\n//       (snapshot) => {\n//         const prog = Math.round(\n//           (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n//         );\n//         setProgress(prog);\n//       },\n//       (error) => console.log(error),\n//       () => {\n//         getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n//           console.log(\"File available at\", downloadURL);\n//         });\n//       }\n//     );\n//   };\n//   return (\n//     <div className=\"App\">\n//       <form onSubmit={formHandler}>\n//         <input type=\"file\" className=\"input\" />\n//         <button type=\"submit\">Upload</button>\n//       </form>\n//       <hr />\n//       <h2>Uploading done {progress}%</h2>\n//       <p>{progress===100? 'click view to lookat the data':'Waiting'}</p>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["D:/reactutorial/React-Router/01-starting-project/src/Fileupload.js"],"names":[],"mappings":"AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":[" \r\n// import { useState } from \"react\";\r\n// import { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\n// import { storage } from \"./fire\";\r\n\r\n// function App() {\r\n//   const [progress, setProgress] = useState(0);\r\n//   const formHandler = (e) => {\r\n//     e.preventDefault();\r\n//     const file = e.target[0].files[0];\r\n//     uploadFiles(file);\r\n//   };\r\n\r\n//   const uploadFiles = (file) => {\r\n//     //\r\n//     if (!file) return;\r\n//     const sotrageRef = ref(storage, `files/${file.name}`);\r\n//     const uploadTask = uploadBytesResumable(sotrageRef, file);\r\n\r\n//     uploadTask.on(\r\n//       \"state_changed\",\r\n//       (snapshot) => {\r\n//         const prog = Math.round(\r\n//           (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n//         );\r\n//         setProgress(prog);\r\n//       },\r\n//       (error) => console.log(error),\r\n//       () => {\r\n//         getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n//           console.log(\"File available at\", downloadURL);\r\n//         });\r\n//       }\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <form onSubmit={formHandler}>\r\n//         <input type=\"file\" className=\"input\" />\r\n//         <button type=\"submit\">Upload</button>\r\n//       </form>\r\n//       <hr />\r\n//       <h2>Uploading done {progress}%</h2>\r\n//       <p>{progress===100? 'click view to lookat the data':'Waiting'}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}